<?php
/**
 * Implements hook_preprocess_node().
 */
function glossary_tooltip_preprocess_node(array &$variables) {
  // Marker 1: Check if the node belongs to the "article" content type and has a "field_test" field.
  $node = $variables['node'];
  $build = &$variables['content'];

  // Check if the node type is "article" and the field "field_test" exists.
  if ($node->getType() === 'article' && isset($build['field_test'])) {
    // Get the node content.
    $content_items = $build['field_test'];

    // Ensure the field items are an array.
    if (is_array($content_items)) {
      // Retrieve glossary terms.
      $terms = glossary_tooltip_get_glossary_terms();

      // Scan node content for glossary terms.
      foreach ($terms as $term) {
        // Check if the term exists in the node content.
        $term_name = $term->name;
        $term_description = isset($term->description__value) ? $term->description__value : '';

        // Marker 5: Check if the content item is an array and has a #markup property.
//        $updatedDescription = htmlspecialchars_decode("<div class='term-description'>$term_description</div>");
        $updatedTerm = strip_tags($term_name);
        $updatedDescription = strip_tags($term_description);
        // Replace term occurrences with term + description.
        $content_items[0]['#context']['value'] = str_replace($term_name, $updatedTerm . ' ( ' . $updatedDescription . ' ) ',  $content_items[0]['#context']['value']);
        // Remove non breakable space
         $content_items[0]['#context']['value'] = str_replace("&nbsp;", " ", $content_items[0]['#context']['value']);

        // Add cache tag for the terms taxonomy.
        if ($variables['node']->getType() === 'article') {
          // Add the cache tag 'taxonomy_term_list'.
          $variables['#cache']['tags'][] = 'taxonomy_term_list';
        }
      }

      // Update node content.
      $build['field_test'] = $content_items;
    }
  }
}

/**
 * Retrieve glossary terms from the taxonomy vocabulary.
 */
function glossary_tooltip_get_glossary_terms() {
  return \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('glossary_tooltip');
}

